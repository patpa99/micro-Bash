#include <stdlib.h>
#include <stdio.h>

#define MAXQUEUEELEM 1000	// maximum number of items that can be present in the queue


/**************************************************************************************************************************
Queue Struct.
**************************************************************************************************************************/
typedef struct {
	char **array;
	int last, first;
} queue;


/**************************************************************************************************************************
Function that creates the queue with dimension dim.
**************************************************************************************************************************/
void create(queue *, unsigned int);


/**************************************************************************************************************************
Function that empties the queue.
**************************************************************************************************************************/
void reset(queue *);


/**************************************************************************************************************************
Function that returns 1 if the queue is empty, otherwise it returns 0.
**************************************************************************************************************************/
unsigned int isEmpty(queue *);


/**************************************************************************************************************************
Function that inserts items at the end of the queue.
**************************************************************************************************************************/
void enqueue(queue *, char *);


/**************************************************************************************************************************
Function that removes from the beginning of the queue and returns the removed element.
**************************************************************************************************************************/
char *dequeue(queue *);


/**************************************************************************************************************************
Function that returns 1 if there are two consecutive pipes in the queue, otherwise it returns 0.
**************************************************************************************************************************/
unsigned int checkPipeError(const queue *);


/**************************************************************************************************************************
Function that returns the number of items in the queue.
**************************************************************************************************************************/
unsigned int size(const queue *);


/**************************************************************************************************************************
Function that copies the queue passed as the first parameter to the queue passed as the second parameter.
**************************************************************************************************************************/
void copyQueue(const queue *, queue *);


/**************************************************************************************************************************
Function that prints all items in the queue.
**************************************************************************************************************************/
void printQueue(const queue *);